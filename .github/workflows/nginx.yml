name: Project Alpha CI/CD nginx config pipeline

on:
  push:
    branches:
      - main

jobs:
  check_folder_nginx_changed:
    name: Check if nginx folder changed
    runs-on: ubuntu-latest
    outputs:
      is_changed: ${{ steps.changes.outputs.nginx }}

    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            nginx:
              - 'nginx/**'

      # run only if "nginx" files were changed
      - name: nginx is changed
        if: steps.changes.outputs.nginx == 'true'
        run: echo "Folder nginx has changed"

      # run only if "nginx" files were not changed
      - name: nginx is not changed
        if: steps.changes.outputs.nginx == 'false'
        run: echo "Folder nginx has not changed"

  pull_and_run_on_droplet:
    name: Pull Config and Run Docker Image on Droplet
    needs: [check_folder_nginx_changed]
    if: needs.check_folder_nginx_changed.outputs.is_changed == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh/
          cd ~/.ssh/ 
          touch id_rsa && touch known_hosts && chmod 600 id_rsa
          echo "${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa

      - name: Add Droplet to known hosts
        run: ssh-keyscan ${{ secrets.SERVER_IP_ADDRESS}} >> ~/.ssh/known_hosts

      - name: Pull and run Docker images on Droplet
        run: |
          scp -r ./nginx ${{ secrets.SERVER_USER}}@${{ secrets.SERVER_IP_ADDRESS}}:.
          ssh ${{ secrets.SERVER_USER}}@${{ secrets.SERVER_IP_ADDRESS}} 'docker-compose up --build -d --force-recreate --remove-orphans nginx'
